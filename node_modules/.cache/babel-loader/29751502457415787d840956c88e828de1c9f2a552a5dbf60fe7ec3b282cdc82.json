{"ast":null,"code":"var _jsxFileName = \"/Users/aleksander/Documents/Development/GMIxc/src/components/UserQuestionInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Send, MessageCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserQuestionInput = ({\n  onAskQuestion,\n  disabled,\n  userName = 'User'\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (question.trim() && !disabled) {\n      onAskQuestion(question.trim());\n      setQuestion('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-question-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n        size: 16,\n        style: {\n          marginRight: '8px',\n          verticalAlign: 'middle'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), userName, \"'s Question\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"question-input\",\n          placeholder: `Ask a question to shape the debate...`,\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          onKeyPress: handleKeyPress,\n          disabled: disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-btn\",\n          disabled: !question.trim() || disabled,\n          title: \"Send your question to the speakers\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), !disabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.8rem',\n          color: '#28a745',\n          marginTop: '8px',\n          fontStyle: 'italic'\n        },\n        children: \"\\uD83D\\uDCAC You can ask questions anytime during the debate!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UserQuestionInput, \"X6N7EgaEMrwiXWJKemnQbxZKjLQ=\");\n_c = UserQuestionInput;\nexport default UserQuestionInput;\nvar _c;\n$RefreshReg$(_c, \"UserQuestionInput\");","map":{"version":3,"names":["React","useState","Send","MessageCircle","jsxDEV","_jsxDEV","UserQuestionInput","onAskQuestion","disabled","userName","_s","question","setQuestion","handleSubmit","e","preventDefault","trim","handleKeyPress","key","shiftKey","className","children","size","style","marginRight","verticalAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onKeyPress","title","fontSize","color","marginTop","fontStyle","_c","$RefreshReg$"],"sources":["/Users/aleksander/Documents/Development/GMIxc/src/components/UserQuestionInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Send, MessageCircle } from 'lucide-react';\n\nconst UserQuestionInput = ({ onAskQuestion, disabled, userName = 'User' }) => {\n  const [question, setQuestion] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (question.trim() && !disabled) {\n      onAskQuestion(question.trim());\n      setQuestion('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <div className=\"user-question-input\">\n      <label>\n        <MessageCircle size={16} style={{ marginRight: '8px', verticalAlign: 'middle' }} />\n        {userName}'s Question\n      </label>\n      <form onSubmit={handleSubmit}>\n        <div className=\"question-input-container\">\n          <input\n            type=\"text\"\n            className=\"question-input\"\n            placeholder={`Ask a question to shape the debate...`}\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            onKeyPress={handleKeyPress}\n            disabled={disabled}\n          />\n          <button\n            type=\"submit\"\n            className=\"send-btn\"\n            disabled={!question.trim() || disabled}\n            title=\"Send your question to the speakers\"\n          >\n            <Send size={20} />\n          </button>\n        </div>\n        {!disabled && (\n          <div style={{ \n            fontSize: '0.8rem', \n            color: '#28a745', \n            marginTop: '8px',\n            fontStyle: 'italic'\n          }}>\n            ðŸ’¬ You can ask questions anytime during the debate!\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default UserQuestionInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}